#include <iostream>

using namespace std;

struct List
{
	int data;
	List* next;
};

List* create_list(int size)
{
	List* front = 0, * spisok = new List;
	int i;
	cout << "Введите элементы списка\n";
	cin >> spisok->data;
	front = spisok;
	for (i = 1; i < size; i++)
	{
		List* spisok_2 = new List;
		spisok->next = spisok_2;
		spisok = spisok->next;
		cin >> spisok->data;
		spisok->next = NULL;
	}
	return front;
};

void print_list(List* front)
{
	if (front == NULL)
	{
		cout << "Пустой список\n";
	}
	else
	{
		List* spisok = front;
		while (!spisok == NULL)
		{
			cout << spisok->data << "\t";
			spisok = spisok->next;
		}
	}
};

int score(List* front)
{
	int size = 0;
	List* spisok = front;
	while (spisok != NULL)
	{
		spisok = spisok->next;
		size++;
	}
	return size;
}

void pop(List*& front, int size)
{
	List* spisok = front;
	int key = -1;
	for (int i = 0; i < size; i++)
	{
		if (spisok->data % 2 == 0)
		{
			key = i;
		}
		spisok = spisok->next;
	}
	spisok = front;
	if (key == 0)
	{
		List* point = front;
		front = spisok->next;
		delete point;
	}
	for (int i = 0; i < size; i++)
	{
		if (i + 1 == key)
		{
			List* point = spisok->next;
			spisok->next = spisok->next->next;
			delete point;
		}
		else
		{
			spisok = spisok->next;
		}
	}
};

int main()
{
	system("chcp 1251>nul");
	int size_list;
	cout << "Введите размер списка: \n";
	cin >> size_list;
	while (size_list < 1)
	{
		cout << "Ошибка! Введите корректный размер списка: \n";
		cin >> size_list;
	}
	List* spisok = create_list(size_list);
	cout << "СПИСОК: \n";
	print_list(spisok);
	pop(spisok, size_list);
	int new_size = score(spisok);
	if (new_size == size_list)
		cout << "\nЧетных элементов в последовательностии нет\nСписок не изменен\n";
	else
	{
		cout << "\nСписок после удаления\n";
		print_list(spisok);
	}
	return 0;
}